stages:
  - Test
  - Build in Release
  - Docs

pages:
  stage: Docs
  only:
    - tags
  image: norionomura/jazzy
  tags:
    - docker
  variables:
    MODULE_NAME: "RediStack"
    REPO_URL: "https://gitlab.com/mordil/swift-redi-stack"
  script: |
    export VERSION=$(git describe --abbrev=0 --tags || echo "0.0.0")
    swift build
    sourcekitten doc --spm-module "$MODULE_NAME" > "./$MODULE_NAME.json"
    jazzy --clean \
          --author "Nathan Harris (Mordil)" \
          --readme "./README.md" \
          --author_url "https://www.mordil.info" \
          --github_url "$REPO_URL" \
          --github-file-prefix "$REPO_URL/blob/$VERSION" \
          --root-url "https://mordil.gitlab.io/swift-redi-stack/" \
          --module "$MODULE_NAME" \
          --module-version "$VERSION" \
          --theme docs/theme \
          --sourcekitten-sourcefile "./$MODULE_NAME.json" \
          --output "./public"
  artifacts:
    paths:
      - public

.build:
  stage: Build in Release
  tags:
    - docker
  script:
    - swift build -c release -v
  only:
    - master

build 5.0:ubuntu-xenial:
  extends: .build
  image: swift:5.0-xenial
build 5.1:ubuntu-xenial:
  extends: .build
  image: swift:5.1-xenial
build latest:ubuntu-xenial:
  extends: .build
  image: norionomura/swift:nightly
  allow_failure: true

build 5.0:ubuntu-bionic:
  extends: .build
  image: swift:5.0-bionic
build 5.1ubuntu-bionic:
  extends: .build
  image: swift:5.1-bionic

.test:
  stage: Test
  tags:
    - docker
  variables:
    REDIS_URL: 'redis'
    REDIS_PW: 'password'
    USE_THREAD_SANITIZER: 'YES'
    USE_ADDRESS_SANITIZER: 'YES'
  services:
  - name: redis:5
    alias: 'redis'
    command: ["redis-server", "--requirepass", "password"]
  before_script:
    - swift --version
  script: |
    echo "Running unit tests with thread ($USE_THREAD_SANITIZER) and address ($USE_ADDRESS_SANITIZER) sanitizers"

    SANITIZERS=()

    if [[ "$USE_THREAD_SANITIZER" == "YES" ]]
    then
      SANITIZERS+=("thread")
    fi
    if [[ "$USE_ADDRESS_SANITIZER" == "YES" ]]
    then
      SANITIZERS+=("address")
    fi
    if [[ 0 -eq ${#SANITIZERS[@]} ]]
    then
      SANITIZERS+=("")
    fi
    
    for SANITIZER in "${SANITIZERS[@]}"
    do
      SANITIZER_ARG=$([ -n SANITIZER ] && echo "--sanitize=$SANITIZER" || echo "")
      swift test $SANITIZER_ARG
    done

test 5.0:ubuntu-xenial:
  extends: .test
  image: swift:5.0-xenial
  variables:
    USE_THREAD_SANITIZER: 'NO'
test 5.1:ubuntu-xenial:
  extends: .test
  image: swift:5.1-xenial
test latest:ubuntu-xenial:
  extends: .test
  image: norionomura/swift:nightly
  allow_failure: true

test 5.0:ubuntu-bionic:
  extends: .test
  image: swift:5.0-bionic
  variables:
    USE_THREAD_SANITIZER: 'NO'
test 5.1:ubuntu-bionic:
  extends: .test
  image: swift:5.1-bionic
